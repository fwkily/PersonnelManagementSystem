<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.SocietyrelationMapper">
  <resultMap id="BaseResultMap" type="com.bean.Societyrelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="empno" jdbcType="INTEGER" property="empno" />
    <result column="relation" jdbcType="VARCHAR" property="relation" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="posi" jdbcType="VARCHAR" property="posi" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="explanation1" jdbcType="VARCHAR" property="explanation1" />
    <result column="explanation2" jdbcType="VARCHAR" property="explanation2" />
    <result column="explanation3" jdbcType="VARCHAR" property="explanation3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, empno, relation, name, job, posi, tel, explanation1, explanation2, explanation3
  </sql>
  <select id="selectByExample" parameterType="com.bean.SocietyrelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from societyrelation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from societyrelation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from societyrelation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.SocietyrelationExample">
    delete from societyrelation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Societyrelation">
    insert into societyrelation (id, empno, relation, 
      name, job, posi, tel, 
      explanation1, explanation2, explanation3
      )
    values (#{id,jdbcType=INTEGER}, #{empno,jdbcType=INTEGER}, #{relation,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{posi,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{explanation1,jdbcType=VARCHAR}, #{explanation2,jdbcType=VARCHAR}, #{explanation3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Societyrelation">
    insert into societyrelation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empno != null">
        empno,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="posi != null">
        posi,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="explanation1 != null">
        explanation1,
      </if>
      <if test="explanation2 != null">
        explanation2,
      </if>
      <if test="explanation3 != null">
        explanation3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="posi != null">
        #{posi,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="explanation1 != null">
        #{explanation1,jdbcType=VARCHAR},
      </if>
      <if test="explanation2 != null">
        #{explanation2,jdbcType=VARCHAR},
      </if>
      <if test="explanation3 != null">
        #{explanation3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.SocietyrelationExample" resultType="java.lang.Long">
    select count(*) from societyrelation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update societyrelation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empno != null">
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.posi != null">
        posi = #{record.posi,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.explanation1 != null">
        explanation1 = #{record.explanation1,jdbcType=VARCHAR},
      </if>
      <if test="record.explanation2 != null">
        explanation2 = #{record.explanation2,jdbcType=VARCHAR},
      </if>
      <if test="record.explanation3 != null">
        explanation3 = #{record.explanation3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update societyrelation
    set id = #{record.id,jdbcType=INTEGER},
      empno = #{record.empno,jdbcType=INTEGER},
      relation = #{record.relation,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      posi = #{record.posi,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      explanation1 = #{record.explanation1,jdbcType=VARCHAR},
      explanation2 = #{record.explanation2,jdbcType=VARCHAR},
      explanation3 = #{record.explanation3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Societyrelation">
    update societyrelation
    <set>
      <if test="empno != null">
        empno = #{empno,jdbcType=INTEGER},
      </if>
      <if test="relation != null">
        relation = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="posi != null">
        posi = #{posi,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="explanation1 != null">
        explanation1 = #{explanation1,jdbcType=VARCHAR},
      </if>
      <if test="explanation2 != null">
        explanation2 = #{explanation2,jdbcType=VARCHAR},
      </if>
      <if test="explanation3 != null">
        explanation3 = #{explanation3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Societyrelation">
    update societyrelation
    set empno = #{empno,jdbcType=INTEGER},
      relation = #{relation,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      posi = #{posi,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      explanation1 = #{explanation1,jdbcType=VARCHAR},
      explanation2 = #{explanation2,jdbcType=VARCHAR},
      explanation3 = #{explanation3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>