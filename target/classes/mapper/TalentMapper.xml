<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.TalentMapper">
  <resultMap id="BaseResultMap" type="com.bean.Talent">
    <id column="empno" jdbcType="INTEGER" property="empno" />
    <id column="jobid" jdbcType="INTEGER" property="jobid" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="explanation1" jdbcType="VARCHAR" property="explanation1" />
    <result column="explanation2" jdbcType="VARCHAR" property="explanation2" />
    <result column="explanation3" jdbcType="VARCHAR" property="explanation3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    empno, jobid, time, explanation1, explanation2, explanation3
  </sql>
  <select id="selectByExample" parameterType="com.bean.TalentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from talent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.bean.TalentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from talent
    where empno = #{empno,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bean.TalentKey">
    delete from talent
    where empno = #{empno,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.TalentExample">
    delete from talent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Talent">
    insert into talent (empno, jobid, time, 
      explanation1, explanation2, explanation3
      )
    values (#{empno,jdbcType=INTEGER}, #{jobid,jdbcType=INTEGER}, #{time,jdbcType=DATE}, 
      #{explanation1,jdbcType=VARCHAR}, #{explanation2,jdbcType=VARCHAR}, #{explanation3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Talent">
    insert into talent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empno != null">
        empno,
      </if>
      <if test="jobid != null">
        jobid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="explanation1 != null">
        explanation1,
      </if>
      <if test="explanation2 != null">
        explanation2,
      </if>
      <if test="explanation3 != null">
        explanation3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="jobid != null">
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="explanation1 != null">
        #{explanation1,jdbcType=VARCHAR},
      </if>
      <if test="explanation2 != null">
        #{explanation2,jdbcType=VARCHAR},
      </if>
      <if test="explanation3 != null">
        #{explanation3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.TalentExample" resultType="java.lang.Long">
    select count(*) from talent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update talent
    <set>
      <if test="record.empno != null">
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.jobid != null">
        jobid = #{record.jobid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.explanation1 != null">
        explanation1 = #{record.explanation1,jdbcType=VARCHAR},
      </if>
      <if test="record.explanation2 != null">
        explanation2 = #{record.explanation2,jdbcType=VARCHAR},
      </if>
      <if test="record.explanation3 != null">
        explanation3 = #{record.explanation3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update talent
    set empno = #{record.empno,jdbcType=INTEGER},
      jobid = #{record.jobid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      explanation1 = #{record.explanation1,jdbcType=VARCHAR},
      explanation2 = #{record.explanation2,jdbcType=VARCHAR},
      explanation3 = #{record.explanation3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Talent">
    update talent
    <set>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="explanation1 != null">
        explanation1 = #{explanation1,jdbcType=VARCHAR},
      </if>
      <if test="explanation2 != null">
        explanation2 = #{explanation2,jdbcType=VARCHAR},
      </if>
      <if test="explanation3 != null">
        explanation3 = #{explanation3,jdbcType=VARCHAR},
      </if>
    </set>
    where empno = #{empno,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Talent">
    update talent
    set time = #{time,jdbcType=DATE},
      explanation1 = #{explanation1,jdbcType=VARCHAR},
      explanation2 = #{explanation2,jdbcType=VARCHAR},
      explanation3 = #{explanation3,jdbcType=VARCHAR}
    where empno = #{empno,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
  </update>
</mapper>